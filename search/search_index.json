{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"CASPR Welcome to CASPR. Available resources: Installation Guide Tutorial","title":"Home"},{"location":"#caspr","text":"Welcome to CASPR. Available resources: Installation Guide Tutorial","title":"CASPR"},{"location":"installation/","text":"Installation Guide CASPR is being developed and tested under Linux and macOS. In order to use it, first you need to clone the repository: git clone https://github.com/judithbergada/CASPRg.git At this point, the tool should be available in your computer. Conda Environment Installation CASPR employs several software packages to carry out its different functions: fastqc cutadapt fastx-toolkit STAR samtools mageck and mageck-vispr vispr R The easiest way to download them is to use Miniconda , which allows to create an isolated environment. To install miniconda, please follow the instuctions . Once Miniconda is installed, you can obtain all the packages from a single command like this: conda env create -n caspr -f environment.yml This option is recommended because it will install the software defined in the environement.yml file, ensuring that the pipeline works smoothly. Alternatively, you can also run: conda create -n caspr python=3.5 conda install -n caspr -c bioconda cutadapt conda install -n caspr -c bioconda star conda install -n caspr -c bioconda samtools conda install -n caspr -c bioconda vispr conda install -n caspr -c bioconda mageck conda install -n caspr -c bioconda mageck-vispr conda install -n caspr r conda install -n caspr -c biobuilds fastx-toolkit conda install -n caspr -c bioconda fastqc","title":"Installation"},{"location":"installation/#installation-guide","text":"CASPR is being developed and tested under Linux and macOS. In order to use it, first you need to clone the repository: git clone https://github.com/judithbergada/CASPRg.git At this point, the tool should be available in your computer.","title":"Installation Guide"},{"location":"installation/#conda-environment-installation","text":"CASPR employs several software packages to carry out its different functions: fastqc cutadapt fastx-toolkit STAR samtools mageck and mageck-vispr vispr R The easiest way to download them is to use Miniconda , which allows to create an isolated environment. To install miniconda, please follow the instuctions . Once Miniconda is installed, you can obtain all the packages from a single command like this: conda env create -n caspr -f environment.yml This option is recommended because it will install the software defined in the environement.yml file, ensuring that the pipeline works smoothly. Alternatively, you can also run: conda create -n caspr python=3.5 conda install -n caspr -c bioconda cutadapt conda install -n caspr -c bioconda star conda install -n caspr -c bioconda samtools conda install -n caspr -c bioconda vispr conda install -n caspr -c bioconda mageck conda install -n caspr -c bioconda mageck-vispr conda install -n caspr r conda install -n caspr -c biobuilds fastx-toolkit conda install -n caspr -c bioconda fastqc","title":"Conda Environment Installation"},{"location":"tutorial/","text":"Tutorial Download the Code and Data Run once: # Clone the repository git clone https://github.com/judithbergada/CASPRg.git $HOME/CASPR # Add CASPR to PATH = Installation echo \"export PATH=$HOME/CASPR/source:$PATH\" >> $HOME/.bashrc source $HOME/.bashrc # Note the previous commands do not work if you use Zsh Let's check that CASPR is available: CASPR --help Let's enjoy CASPR Go where the data is located. ls -al $HOME/CASPR/testdata Let's say we run the following command: CASPR do_something_awesome And the output should be this amazing plot:","title":"Tutorial"},{"location":"tutorial/#tutorial","text":"","title":"Tutorial"},{"location":"tutorial/#download-the-code-and-data","text":"Run once: # Clone the repository git clone https://github.com/judithbergada/CASPRg.git $HOME/CASPR # Add CASPR to PATH = Installation echo \"export PATH=$HOME/CASPR/source:$PATH\" >> $HOME/.bashrc source $HOME/.bashrc # Note the previous commands do not work if you use Zsh Let's check that CASPR is available: CASPR --help","title":"Download the Code and Data"},{"location":"tutorial/#lets-enjoy-caspr","text":"Go where the data is located. ls -al $HOME/CASPR/testdata Let's say we run the following command: CASPR do_something_awesome And the output should be this amazing plot:","title":"Let's enjoy CASPR"}]}