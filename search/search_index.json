{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"CASPR Welcome to CASPR. Available resources: Installation Guide Tutorial","title":"Home"},{"location":"#caspr","text":"Welcome to CASPR. Available resources: Installation Guide Tutorial","title":"CASPR"},{"location":"installation/","text":"Installation Guide CASPR is being developed and tested under Linux and macOS. In order to use it, first you need to clone the repository: git clone https://github.com/judithbergada/CASPRg.git $HOME/CASPR For a proper installation, it is also recommended to run: # Add CASPR to your PATH echo \"export PATH=$HOME/CASPR/source:$PATH\" >> $HOME/.bashrc source $HOME/.bashrc # Please, note that the previous commands do not work if you use Zsh At this point, the tool should be available in your computer. Conda Environment Installation CASPR employs several software packages to carry out its different functions: fastqc cutadapt fastx-toolkit STAR samtools mageck and mageck-vispr vispr R The easiest way to download them is to use Miniconda , which allows to create an isolated environment. To install miniconda, please follow the instuctions . Once Miniconda is installed, you can obtain all the packages from a single command like this: conda env create -n caspr -f environment.yml This option is recommended because it will install the software defined in the environement.yml file, ensuring that the pipeline works smoothly. Alternatively, you can also run: conda create -n caspr python=3.5 conda install -n caspr -c bioconda cutadapt conda install -n caspr -c bioconda star conda install -n caspr -c bioconda samtools conda install -n caspr -c bioconda vispr conda install -n caspr -c bioconda mageck conda install -n caspr -c bioconda mageck-vispr conda install -n caspr r conda install -n caspr -c biobuilds fastx-toolkit conda install -n caspr -c bioconda fastqc Once the installation is successful, you can start using CASPR.","title":"Installation"},{"location":"installation/#installation-guide","text":"CASPR is being developed and tested under Linux and macOS. In order to use it, first you need to clone the repository: git clone https://github.com/judithbergada/CASPRg.git $HOME/CASPR For a proper installation, it is also recommended to run: # Add CASPR to your PATH echo \"export PATH=$HOME/CASPR/source:$PATH\" >> $HOME/.bashrc source $HOME/.bashrc # Please, note that the previous commands do not work if you use Zsh At this point, the tool should be available in your computer.","title":"Installation Guide"},{"location":"installation/#conda-environment-installation","text":"CASPR employs several software packages to carry out its different functions: fastqc cutadapt fastx-toolkit STAR samtools mageck and mageck-vispr vispr R The easiest way to download them is to use Miniconda , which allows to create an isolated environment. To install miniconda, please follow the instuctions . Once Miniconda is installed, you can obtain all the packages from a single command like this: conda env create -n caspr -f environment.yml This option is recommended because it will install the software defined in the environement.yml file, ensuring that the pipeline works smoothly. Alternatively, you can also run: conda create -n caspr python=3.5 conda install -n caspr -c bioconda cutadapt conda install -n caspr -c bioconda star conda install -n caspr -c bioconda samtools conda install -n caspr -c bioconda vispr conda install -n caspr -c bioconda mageck conda install -n caspr -c bioconda mageck-vispr conda install -n caspr r conda install -n caspr -c biobuilds fastx-toolkit conda install -n caspr -c bioconda fastqc Once the installation is successful, you can start using CASPR.","title":"Conda Environment Installation"},{"location":"tutorial/","text":"Tutorial Running CASPR is extremely easy and convenient to analyze CRIPR-Cas9 screens using pgRNAs. The testdata folder contains two brief examples to go through all steps. Simply copy the scripts provided in each example to visualize the demos. Get started: download CASPR code and data If it is your first time with CASPR, please make sure you have downoaded the repository. This can be done a follows: git clone https://github.com/judithbergada/CASPRg.git $HOME/CASPR For a proper installation of the tool, it is also recommended to run: # Add CASPR to PATH echo \"export PATH=$HOME/CASPR/source:$PATH\" >> $HOME/.bashrc source $HOME/.bashrc You can now check that CASPR is available: CASPR --help Example 1: analysis of a CRISPR screen using pgRNAs This example shows how to analyse a CRISPR screen with the following features: Library of pgRNAs Two time points: week zero and week four Only one replicate per time point Start analysis from the raw sequencing data To compute the analysis, it is essential to have: Paired reads Text file with a library of pgRNAs * `Text file with the experimental design (control and treated samples) Additionally, you may provide a text file with positive, negative and neutral controls. Let's check that the data is available in the expected formats: # Check that the data has been sucessfully downoaded ls $HOME/CASPR/testdata/example_pgrna/ # Display the content of the files to see the format cat $HOME/CASPR/testdata/example_pgrna/expdesign.txt head $HOME/CASPR/testdata/example_pgrna/library.txt head $HOME/CASPR/testdata/example_pgrna/controlfile.txt zcat < week0.1_forward.fastq.gz | head Now you are ready to run the test. If you are not sure about the commands, you can copy them immediately from here: # Import all modules: it only works for users of Ubelix cluster module add UHTS/Analysis/fastx_toolkit/0.0.13.2 module add UHTS/Aligner/STAR/2.6.0c module add UHTS/Analysis/samtools/1.4 module add R/3.5.1 module add UHTS/Quality_control/mageck-vispr/0.5.4 # Run the analysis CASPR \\ -f \"$HOME/CASPR/testdata/example_pgrna/week0.1_forward.fastq.gz, $HOME/CASPR/testdata/example_pgrna/week4.1_forward.fastq.gz\" \\ -r \"$HOME/CASPR/testdata/example_pgrna/week0.1_reverse.fastq.gz, $HOME/CASPR/testdata/example_pgrna/week4.1_reverse.fastq.gz\" \\ --library $HOME/CASPR/testdata/example_pgrna/library.txt \\ -y 0.25 -k \\ --controls $HOME/CASPR/testdata/example_pgrna/controlfile.txt \\ --exper-design $HOME/CASPR/testdata/example_pgrna/expdesign.txt Note that, if you copy the commands from above, you are changing two of the default parameters of CASPR: (1) the FDR threshold will be set to 0.25, and (2) the intermediate files will be kept. Please, make sure you keep the intermediate files to follow the second part of the example. After a few minutes, the outputs should appear in your computer. At this point, you can open them and see if they are as expected. The expected outputs are found in: ls $HOME/CASPR/testdata/example_pgrna/expected_outputs/ For a quick visualization, they should look similar to these plots:","title":"Tutorial"},{"location":"tutorial/#tutorial","text":"Running CASPR is extremely easy and convenient to analyze CRIPR-Cas9 screens using pgRNAs. The testdata folder contains two brief examples to go through all steps. Simply copy the scripts provided in each example to visualize the demos.","title":"Tutorial"},{"location":"tutorial/#get-started-download-caspr-code-and-data","text":"If it is your first time with CASPR, please make sure you have downoaded the repository. This can be done a follows: git clone https://github.com/judithbergada/CASPRg.git $HOME/CASPR For a proper installation of the tool, it is also recommended to run: # Add CASPR to PATH echo \"export PATH=$HOME/CASPR/source:$PATH\" >> $HOME/.bashrc source $HOME/.bashrc You can now check that CASPR is available: CASPR --help","title":"Get started: download CASPR code and data"},{"location":"tutorial/#example-1-analysis-of-a-crispr-screen-using-pgrnas","text":"This example shows how to analyse a CRISPR screen with the following features: Library of pgRNAs Two time points: week zero and week four Only one replicate per time point Start analysis from the raw sequencing data To compute the analysis, it is essential to have: Paired reads Text file with a library of pgRNAs * `Text file with the experimental design (control and treated samples) Additionally, you may provide a text file with positive, negative and neutral controls. Let's check that the data is available in the expected formats: # Check that the data has been sucessfully downoaded ls $HOME/CASPR/testdata/example_pgrna/ # Display the content of the files to see the format cat $HOME/CASPR/testdata/example_pgrna/expdesign.txt head $HOME/CASPR/testdata/example_pgrna/library.txt head $HOME/CASPR/testdata/example_pgrna/controlfile.txt zcat < week0.1_forward.fastq.gz | head Now you are ready to run the test. If you are not sure about the commands, you can copy them immediately from here: # Import all modules: it only works for users of Ubelix cluster module add UHTS/Analysis/fastx_toolkit/0.0.13.2 module add UHTS/Aligner/STAR/2.6.0c module add UHTS/Analysis/samtools/1.4 module add R/3.5.1 module add UHTS/Quality_control/mageck-vispr/0.5.4 # Run the analysis CASPR \\ -f \"$HOME/CASPR/testdata/example_pgrna/week0.1_forward.fastq.gz, $HOME/CASPR/testdata/example_pgrna/week4.1_forward.fastq.gz\" \\ -r \"$HOME/CASPR/testdata/example_pgrna/week0.1_reverse.fastq.gz, $HOME/CASPR/testdata/example_pgrna/week4.1_reverse.fastq.gz\" \\ --library $HOME/CASPR/testdata/example_pgrna/library.txt \\ -y 0.25 -k \\ --controls $HOME/CASPR/testdata/example_pgrna/controlfile.txt \\ --exper-design $HOME/CASPR/testdata/example_pgrna/expdesign.txt Note that, if you copy the commands from above, you are changing two of the default parameters of CASPR: (1) the FDR threshold will be set to 0.25, and (2) the intermediate files will be kept. Please, make sure you keep the intermediate files to follow the second part of the example. After a few minutes, the outputs should appear in your computer. At this point, you can open them and see if they are as expected. The expected outputs are found in: ls $HOME/CASPR/testdata/example_pgrna/expected_outputs/ For a quick visualization, they should look similar to these plots:","title":"Example 1: analysis of a CRISPR screen using pgRNAs"}]}